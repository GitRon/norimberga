# Generated by Django 5.2.7 on 2025-10-25 10:06

from pathlib import Path

from django.core.files import File
from django.db import migrations


def generate_coat_of_arms_for_existing_savegames(apps, schema_editor):
    """Generate coat of arms for all existing savegames that don't have one."""
    Savegame = apps.get_model("city", "Savegame")

    # Import here to avoid issues with app registry
    from apps.coat_of_arms.services.generator import CoatOfArmsGeneratorService

    # Filter for savegames without coat of arms (NULL or empty)
    from django.db.models import Q
    savegames_without_coat = Savegame.objects.filter(Q(coat_of_arms__isnull=True) | Q(coat_of_arms=""))

    for savegame in savegames_without_coat:
        # Generate coat of arms
        coat_service = CoatOfArmsGeneratorService()
        temp_path = Path(f"temp_coat_of_arms_{savegame.id}.svg")
        coat_service.process(output_path=temp_path)

        # Save to savegame
        with temp_path.open("rb") as f:
            savegame.coat_of_arms.save(f"coat_of_arms_{savegame.id}.svg", File(f), save=True)

        # Clean up temporary file
        temp_path.unlink()


def reverse_migration(apps, schema_editor):
    """Reverse migration - clear coat of arms."""
    # We don't need to do anything on reverse as the field will still be nullable


class Migration(migrations.Migration):

    dependencies = [
        ('city', '0043_savegame_coat_of_arms'),
    ]

    operations = [
        migrations.RunPython(generate_coat_of_arms_for_existing_savegames, reverse_migration),
    ]
