name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  setup:
    name: Setup & Dependencies
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'

    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/uv
        key: ${{ runner.os }}-uv-${{ hashFiles('uv.lock') }}
        restore-keys: |
          ${{ runner.os }}-uv-

    - name: Install dependencies
      run: uv sync --extra dev

  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    needs: setup
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'

    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/uv
        key: ${{ runner.os }}-uv-${{ hashFiles('uv.lock') }}
        restore-keys: |
          ${{ runner.os }}-uv-

    - name: Install dependencies
      run: uv sync --extra dev

    - name: Check for outdated pre-commit packages
      run: |
        echo "Checking for outdated pre-commit packages..."
        if uv run pre-commit autoupdate --dry-run | grep -q "updating"; then
          echo "⚠️ WARNING: Some pre-commit packages are outdated. Consider running 'pre-commit autoupdate'."
          uv run pre-commit autoupdate --dry-run
        else
          echo "✅ All pre-commit packages are up to date."
        fi
      continue-on-error: true

    - name: Run pre-commit hooks
      run: uv run pre-commit run --all-files --hook-stage pre-push

  database:
    name: Database Migrations
    runs-on: ubuntu-latest
    needs: setup
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'

    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/uv
        key: ${{ runner.os }}-uv-${{ hashFiles('uv.lock') }}
        restore-keys: |
          ${{ runner.os }}-uv-

    - name: Install dependencies
      run: uv sync --extra dev

    - name: Run migrations
      run: uv run python manage.py migrate

  test:
    name: Tests
    runs-on: ubuntu-latest
    needs: [setup, database]
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'

    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/uv
        key: ${{ runner.os }}-uv-${{ hashFiles('uv.lock') }}
        restore-keys: |
          ${{ runner.os }}-uv-

    - name: Install dependencies
      run: uv sync --extra dev

    - name: Run migrations
      run: uv run python manage.py migrate

    - name: Run tests with coverage
      run: uv run pytest --cov=apps --cov-report=xml --cov-report=term-missing

    - name: Upload coverage artifact
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage.xml

  coverage:
    name: Upload Coverage
    runs-on: ubuntu-latest
    needs: test
    if: always()
    steps:
    - name: Download coverage artifact
      uses: actions/download-artifact@v4
      with:
        name: coverage-report

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
